plugins {
    id 'java'
    id 'application'
}

repositories {
    mavenCentral()
    // 添加其他可能包含该库的仓库
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

tasks.withType(JavaExec){
    jvmArgs = ['-Xmx512m', '-Dfile.encoding=UTF-8', '-Dsun.stdout.encoding=UTF-8','-Dsun.stderr.encoding=UTF-8', '-Duser.language=zh', '-Duser.country=CN', '-Dsun.jnu.encoding=UTF-8']
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    // LangChain4j 依赖
    implementation 'dev.langchain4j:langchain4j:1.0.0-beta3'
    implementation 'dev.langchain4j:langchain4j-open-ai:1.0.0-beta3'

    // Jackson 依赖（LangChain4j 可能需要）
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'

    // Gson 依赖
    implementation 'com.google.code.gson:gson:2.10.1'

    // JavaFX 依赖（手动添加本地 JAR 文件）
    implementation files('lib/javafx-sdk-21.0.1/lib/javafx.base.jar')
    implementation files('lib/javafx-sdk-21.0.1/lib/javafx.controls.jar')
    implementation files('lib/javafx-sdk-21.0.1/lib/javafx.graphics.jar')
    implementation files('lib/javafx-sdk-21.0.1/lib/javafx.fxml.jar')
}

application {
    mainClass = 'slideshow.Main'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    // 移除 modularity.inferModulePath，因为不再使用模块系统
}

test {
    useJUnitPlatform()
}

run {
    doFirst {
        jvmArgs = [
                '--module-path', 'lib/javafx-sdk-21.0.1/lib',
                '--add-modules', 'javafx.controls,javafx.fxml,javafx.base,javafx.graphics,java.logging',
                '--add-exports', 'javafx.graphics/com.sun.javafx.tk=ALL-UNNAMED',
                '--add-exports', 'javafx.graphics/com.sun.glass.ui=ALL-UNNAMED',
                '-Dfile.encoding=UTF-8',
                '-Duser.language=zh',
                '-Duser.country=CN',
                '-Dsun.jnu.encoding=UTF-8'
        ]
    }
}

task runEncodingTest(type: JavaExec) {
    mainClass = 'slideshow.EncodingTest'
    classpath = sourceSets.main.runtimeClasspath
    doFirst {
        jvmArgs = [
                '--module-path', 'lib/javafx-sdk-21.0.1/lib',
                '--add-modules', 'javafx.controls,javafx.fxml,javafx.base,javafx.graphics,java.logging',
                '--add-exports', 'javafx.graphics/com.sun.javafx.tk=ALL-UNNAMED',
                '--add-exports', 'javafx.graphics/com.sun.glass.ui=ALL-UNNAMED',
                '-Dfile.encoding=UTF-8',
                '-Duser.language=zh',
                '-Duser.country=CN',
                '-Dsun.jnu.encoding=UTF-8'
        ]
    }
}

compileJava {
    options.encoding = 'UTF-8'
    // 移除模块化相关的 compilerArgs，因为不再使用模块系统
    // options.compilerArgs += [...]
}

compileTestJava {
    options.encoding = 'UTF-8'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}